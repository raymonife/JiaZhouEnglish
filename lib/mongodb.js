// Generated by CoffeeScript 1.10.0
(function() {
  var CollectionClazz, DB, closeDB, getDB, init, mongodb;

  mongodb = require('mongodb');

  DB = null;

  init = function(config, cb) {
    var mongoClient;
    mongoClient = mongodb.MongoClient;
    return mongoClient.connect(config.url, config.options, function(err, db) {
      if (err) {
        return cb(err);
      }
      DB = db;
      return cb();
    });
  };

  getDB = function() {
    return DB;
  };

  closeDB = function() {
    if (!DB) {
      return;
    }
    DB.close();
    return DB = null;
  };

  getSeqId = function(table, cb){
    var col = DB.collection("seq_id_table");
    col.findAndModify(
      {"table": table},
      [["table", 1]],
      {$inc:{seqId: 1}},
      {new: true}
    ,function(err, result){
      console.log(err, result);
      cb(err, result.value.seqId)
    })
  };

  CollectionClazz = function(name) {
    this.name = name;
    this.collection = DB.collection(name);
  };

  CollectionClazz.prototype.getAll = function(cb) {
    var query;
    query = {
      "$or": [
        {
          "_deleted": {
            "$exists": false
          }
        }, {
          "_deleted": 0
        }
      ]
    };
    return this.collection.find(query).toArray(function(err, docs) {
      return cb(err, docs);
    });
  };

  CollectionClazz.prototype.find = function(query, cb) {
    return this.collection.find(query).toArray(function(err, docs) {
      return cb(err, docs);
    });
  };

  CollectionClazz.prototype.save = function(obj, cb){
    this.collection.insert(obj, function(err){
      return cb(err)
    });
  }

  CollectionClazz.prototype.update = function(query, doc, cb){
    this.collection.updateOne(query, doc, function(err){
      return cb(null)
    })
  }

  exports.init = init;

  exports.getDB = getDB;

  exports.closeDB = closeDB;

  exports.getSeqId = getSeqId;

  exports.CollectionClazz = CollectionClazz;

}).call(this);
